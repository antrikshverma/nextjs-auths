// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  username        String?   @default("")
  bio             String?   @default("")
  socials         Social[]  
  email           String?   @unique
  emailVerified   DateTime?
  image           String? @default("https://antrikshdev.tech/user.png")
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  accounts Account[]
  proompts Proompt[] 
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Proompt {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  proompt String @default("")
  description String @default("")
  tags String[] @default([])
  platforms String[] @default([])
  examples Example[] 
  meta String @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, proompt])
}


type  Social {
  name String @default("")
  url String @default("")
}

type Example {
  image String @default("")
  description String @default("")
  platform String @default("")
}
